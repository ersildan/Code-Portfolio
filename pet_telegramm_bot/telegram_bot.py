from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from datetime import datetime

import os
import random

jokes = (None,) # –°–ø–∏—Å–æ–∫ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –£–¥–∞–ª—ë–Ω

thanks_replies = [
    "–°–ø–∞—Å–∏–±–æ! –≠—Ç–æ —Ç–æ—á–Ω–æ –µ–≥–æ —Ä–∞—Å—Ç—Ä–æ–≥–∞–µ—Ç üéà",
    "–ó–∞–ø–∏—Å–∞–ª, –∑–∞–ø–µ—á–∞—Ç–∞–ª, –ø–µ—Ä–µ–¥–∞–º –ê–Ω–¥—Ä—é—Ö–µ üì¶",
    "–•–∞—Ö, –æ—Ç–ª–∏—á–Ω–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ! üéâ",
    "–°—É–ø–µ—Ä, —è —ç—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª –≤ —Å–µ–∫—Ä–µ—Ç–Ω–æ–π –±–∞–∑–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π ü§´",
    "–ü–µ—Ä–µ–¥–∞–º –∏–º–µ–Ω–∏–Ω–Ω–∏–∫—É –ª–∏—á–Ω–æ –ø–æ–¥ —Ñ–∞–Ω—Ñ–∞—Ä—ã ü•Å",
    "–û–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —ç—Ç–æ –ø—Ä–æ—á–∏—Ç–∞–µ—Ç –∏ —Ä–∞—Å–ø–ª—ã–≤—ë—Ç—Å—è –≤ —É–ª—ã–±–∫–µ üòä",
    "–î–∞ —Ç—ã –ø–æ—ç—Ç, –ø—Ä–æ—Å—Ç–æ –ø—Ä–∞–∑–¥–Ω–∏–∫ –∫–∞–∫–æ–π-—Ç–æ! ‚ú®",
    "–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–Ω–∏–≥—É –≤–µ–ª–∏–∫–∏—Ö –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π üìò"
]

extra_replies = [
    "–î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–ª—É—á–µ–Ω–æ üéØ",
    "–ï—â—ë –æ–¥–Ω–æ —Ç—ë–ø–ª–æ–µ —Å–ª–æ–≤–æ –≤ –∫–æ–ø–∏–ª–∫—É üéÅ",
    "–ü–µ—Ä–µ–¥–∞–º —ç—Ç–æ —Ç–æ–∂–µ ‚Äî –ê–Ω–¥—Ä—é—Ö–∞ –Ω–µ –∑–∞–±—É–¥–µ—Ç! üîî",
    "–ó–∞–ø–∏—Å–∞–ª –∏ —ç—Ç–æ. –ê–Ω–¥—Ä—é—Ö–∞ –±—É–¥–µ—Ç –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ ü§©",
    "–•–æ—Ä–æ—à–µ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ, –ø—É—Å—Ç—å –±—É–¥–µ—Ç! üéä",
    "–î–æ–±–∞–≤–ª–µ–Ω–æ –∫ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–π —Ç–µ–ª–µ–≥–µ üöÇ",
    "–£–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª, –∫–∞–∫ –ê–Ω–¥—Ä—é—Ö–∞ —ç—Ç–æ —á–∏—Ç–∞–µ—Ç üòé",
    "–¢—ã —É–º–µ–µ—à—å —É–¥–∏–≤–ª—è—Ç—å, –∑–∞–ø–∏—Å–∞–ª –∏ —ç—Ç–æ! üí•",
]


def has_congratulated(user_id: int) -> bool:
    if not os.path.exists("congratulators.txt"):
        return False
    with open("congratulators.txt", "r") as file:
        return str(user_id) in file.read()

def mark_as_congratulated(user_id: int):
    with open("congratulators.txt", "a") as file:
        file.write(f"{user_id}\n")

# –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é
keyboard = ReplyKeyboardMarkup(
    [
        [KeyboardButton("üéâ –ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å!")],
        [KeyboardButton("üéÇ –°–∫–æ–ª—å–∫–æ –µ–º—É –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å?")],
        [KeyboardButton("üìö –†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç")]
    ],
    resize_keyboard=True
)

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    name = user.first_name
    last_name = user.last_name or ""
    full_name = f"{name} {last_name}".strip()
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {full_name}!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤\n–ü—Ä–∏—ë–º–Ω—É—é –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π üéâ\n–¢—ã–∫–∞–π —Ä—è–¥–æ–º —Å–æ —Å–∫—Ä–µ–ø–∫–æ–π ;)",
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    user = update.effective_user
    username = user.username or user.first_name

    if "–ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å" in text:
        await update.message.reply_text(
            "–ê–Ω–¥—Ä—é—Ö—É –º–æ–∂–Ω–æ –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ:\n–¢–µ–∫—Å—Ç–æ–º, –∫–∞—Ä—Ç–∏–Ω–∫–æ–π, –∞—É–¥–∏–æ, –≤–∏–¥–µ–æ –∏–ª–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–º\n"
            "\n–ü—Ä–∏—ë–º–Ω–∞—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è,\n–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–¥–∞—ë—Ç –∏–º–µ–Ω–∏–Ω–Ω–∏–∫—É üéÅ"
        )
    elif "–°–∫–æ–ª—å–∫–æ" in text:
        await update.message.reply_text(
            "–ú–∞–ª—å—á–∏–∫—É –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 31 –≥–æ–¥–∏–∫ üéÇ\n"
            "–°–º–µ–ª–æ –∑–∞–∫–∏–¥—ã–≤–∞–µ–º –µ–º—É 31 —Ä—É–±–ª—å ü§ë\n–Ω–∞ –∫–∞—Ä—Ç—É"
        )
    elif "–∞–Ω–µ–∫–¥–æ—Ç" in text.lower():
        joke = random.choice(jokes)
        await update.message.reply_text(f"–í–∂—É—Ö –∞–Ω–µ–∫–¥–æ—Ç:\n\n{joke}")
    else:
        save_message(username, text)
        reply = random.choice(thanks_replies)
        await update.message.reply_text(reply)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–¥–∏–∞
async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    user = update.effective_user
    user_id = user.id
    username = user.username or user.first_name

    if "–ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å" in text:
        if has_congratulated(user_id):
            await update.message.reply_text("–¢—ã —É–∂–µ –Ω–∞—á–∞–ª –ø–æ–∑–¥—Ä–∞–≤–ª—è—Ç—å üéâ –ú–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —á—Ç–æ-—Ç–æ –µ—â—ë ‚Äî —è –≤—Å—ë —Å–æ—Ö—Ä–∞–Ω—é! üòâ")
        else:
            await update.message.reply_text(
                "–ê–Ω–¥—Ä—é—Ö—É –º–æ–∂–Ω–æ –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ:\n–¢–µ–∫—Å—Ç–æ–º, –∫–∞—Ä—Ç–∏–Ω–∫–æ–π, –∞—É–¥–∏–æ, –≤–∏–¥–µ–æ –∏–ª–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–º\n"
                "\n–ü—Ä–∏—ë–º–Ω–∞—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è,\n–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–¥–∞—ë—Ç –∏–º–µ–Ω–∏–Ω–Ω–∏–∫—É üéÅ"
            )
            mark_as_congratulated(user_id)

    elif "–°–∫–æ–ª—å–∫–æ" in text:
        await update.message.reply_text(
            "–ú–∞–ª—å—á–∏–∫—É –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 31 –≥–æ–¥–∏–∫ üéÇ\n"
            "–ò–¥–µ—è! –ó–∞–∫–∏–¥—ã–≤–∞–µ–º –µ–º—É 31 —Ä—É–±–ª—å ü§ë\n"
            "–Ω–∞ –∫–∞—Ä—Ç—É –°–±–µ—Ä–∞ –ø–æ –Ω–æ–º–µ—Ä—É number üòÑ\n"
        )

    elif "–∞–Ω–µ–∫–¥–æ—Ç" in text.lower():
        joke = random.choice(jokes)
        await update.message.reply_text(f"–í–∂—É—Ö –∞–Ω–µ–∫–¥–æ—Ç:\n\n{joke}")

    else:
        if not has_congratulated(user_id):
            await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É '–ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å'\n–û–Ω–∞ —Å–Ω–∏–∑—É —Å–ø—Ä–∞–≤–∞ –æ–∫–æ–ª–æ —Å–∫—Ä–µ–ø–∫–∏ üòâ")
        else:
            save_message(username, text)
            reply = random.choice(extra_replies)
            await update.message.reply_text(reply)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
def save_message(username, message):
    with open("congratulations.txt", "a", encoding="utf-8") as file:
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        file.write(f"[{timestamp}] {username}: {message}\n")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    app = ApplicationBuilder().token("ToKEN").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    app.add_handler(MessageHandler(
        filters.PHOTO | filters.Sticker.ALL | filters.VIDEO | filters.Document.ALL, handle_text
    ))

    app.run_polling()
